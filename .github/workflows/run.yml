name: Run

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set current datetime as env variable
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create and checkout batch branch
        run: |
          git fetch origin batch/${{ env.CURRENT_DATETIME }} || true
          if git show-ref --verify --quiet refs/remotes/origin/batch/${{ env.CURRENT_DATETIME }}; then
            git checkout batch/${{ env.CURRENT_DATETIME }}
            git rebase origin/batch/${{ env.CURRENT_DATETIME }} || git rebase --abort
          else
            git checkout -b batch/${{ env.CURRENT_DATETIME }}
          fi

      - name: Generate Dumpfile
        run: cat db/x* > db/dump.sql

      - name: Restore DB
        uses: ryohidaka/action-restore-sqlite@v0.1.0
        with:
          db: "db/archives.db"
          dump-file: "db/dump.sql"

      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.3"
          check-latest: true
          cache-dependency-path: |
            goo-gl-archives/go.sum

      - name: Run backup
        run: cd goo-gl-archives && go run cmd/main.go

      - name: Dump tables to SQL
        uses: ryohidaka/action-dump-sqlite@v0.1.0
        with:
          db: "db/archives.db"
          output: "./db/dump.sql"

      - name: Split Dumpfile
        run: split -b 50000000 db/dump.sql db/x

      - name: Commit and push changes
        uses: ryohidaka/action-commit-push@v0.5.0
        with:
          files: "db"
          branch: "batch/${{ env.CURRENT_DATETIME }}"
          commit-message: "chore: Update database on ${{ env.CURRENT_DATETIME }}"
          rebase: true
          force-push: true
